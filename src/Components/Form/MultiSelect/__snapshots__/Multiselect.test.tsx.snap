// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MultiSelect component test matches snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div
      id="chakra-toast-portal"
    >
      <ul
        id="chakra-toast-manager-top"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column; margin: 0px auto;"
      />
      <ul
        id="chakra-toast-manager-top-left"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
      <ul
        id="chakra-toast-manager-top-right"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
      <ul
        id="chakra-toast-manager-bottom-left"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
      <ul
        id="chakra-toast-manager-bottom"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column; margin: 0px auto;"
      />
      <ul
        id="chakra-toast-manager-bottom-right"
        style="position: fixed; z-index: 5500; pointer-events: none; display: flex; flex-direction: column;"
      />
    </div>
    <div>
      <div
        class="chakra-form-control css-oo2x8u"
        role="group"
      >
        <label
          class="chakra-form__label css-60lnuh"
          for="field-1"
          id="field-1-label"
        >
          RichTextAreaInput label
        </label>
        <div
          class="css-0"
        >
          <div
            role="none"
          >
            <div
              class=" css-tlt8t9"
            >
              <span
                class="css-1f43avz-a11yText-A11yText"
                id="react-select-2-live-region"
              />
              <span
                aria-atomic="false"
                aria-live="polite"
                aria-relevant="additions text"
                class="css-1f43avz-a11yText-A11yText"
              />
              <div
                class=" css-p9orrc"
              >
                <div
                  class=" css-o38mw0"
                >
                  <div
                    class=" css-179kski"
                    id="react-select-2-placeholder"
                  >
                    DatePicker placeholder
                  </div>
                  <input
                    aria-autocomplete="list"
                    aria-describedby="react-select-2-placeholder"
                    aria-expanded="false"
                    aria-haspopup="true"
                    aria-readonly="true"
                    class="css-mohuvp-dummyInput-DummyInput"
                    id="field-1"
                    inputmode="none"
                    role="combobox"
                    tabindex="0"
                    value=""
                  />
                </div>
                <div
                  class=" css-hfbj6y"
                >
                  <div
                    aria-hidden="true"
                    class=" css-4zi1wo"
                  >
                    <svg
                      class="chakra-icon css-onkibi"
                      focusable="false"
                      viewBox="0 0 24 24"
                    >
                      <path
                        d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                        fill="currentColor"
                      />
                    </svg>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="chakra-form-control css-oo2x8u"
      role="group"
    >
      <label
        class="chakra-form__label css-60lnuh"
        for="field-1"
        id="field-1-label"
      >
        RichTextAreaInput label
      </label>
      <div
        class="css-0"
      >
        <div
          role="none"
        >
          <div
            class=" css-tlt8t9"
          >
            <span
              class="css-1f43avz-a11yText-A11yText"
              id="react-select-2-live-region"
            />
            <span
              aria-atomic="false"
              aria-live="polite"
              aria-relevant="additions text"
              class="css-1f43avz-a11yText-A11yText"
            />
            <div
              class=" css-p9orrc"
            >
              <div
                class=" css-o38mw0"
              >
                <div
                  class=" css-179kski"
                  id="react-select-2-placeholder"
                >
                  DatePicker placeholder
                </div>
                <input
                  aria-autocomplete="list"
                  aria-describedby="react-select-2-placeholder"
                  aria-expanded="false"
                  aria-haspopup="true"
                  aria-readonly="true"
                  class="css-mohuvp-dummyInput-DummyInput"
                  id="field-1"
                  inputmode="none"
                  role="combobox"
                  tabindex="0"
                  value=""
                />
              </div>
              <div
                class=" css-hfbj6y"
              >
                <div
                  aria-hidden="true"
                  class=" css-4zi1wo"
                >
                  <svg
                    class="chakra-icon css-onkibi"
                    focusable="false"
                    viewBox="0 0 24 24"
                  >
                    <path
                      d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
                      fill="currentColor"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
